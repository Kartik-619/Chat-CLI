{"ast":null,"code":"// src/socket.js\nimport { io } from \"socket.io-client\";\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  return parts.length === 2 ? parts.pop().split(';').shift() : null;\n}\n\n// Get token from cookie or localStorage\nconst token = getCookie(\"token\") || localStorage.getItem(\"token\");\nif (!token) {\n  console.warn(\"No token found for Socket.IO authentication\");\n}\nexport const socket = io(\"http://localhost:5000\", {\n  auth: {\n    token // ← This matches socket.handshake.auth.token\n  },\n  // Remove `withCredentials` when using `auth`\n  autoConnect: true\n});\n\n//  Catch connection errors\nsocket.on(\"connect_error\", err => {\n  console.error(\"Socket connection failed:\", err.message);\n  if (err.message.includes(\"No token\")) {\n    console.log(\" Fix: Ensure JWT token is available in cookies or localStorage\");\n  }\n});","map":{"version":3,"names":["io","getCookie","name","value","document","cookie","parts","split","length","pop","shift","token","localStorage","getItem","console","warn","socket","auth","autoConnect","on","err","error","message","includes","log"],"sources":["C:/Users/anshi/OneDrive/Desktop/abc/chat/frontend-cli/src/services/socket.js"],"sourcesContent":["// src/socket.js\r\nimport { io } from \"socket.io-client\";\r\n\r\nfunction getCookie(name) {\r\n  const value = `; ${document.cookie}`;\r\n  const parts = value.split(`; ${name}=`);\r\n  return parts.length === 2 ? parts.pop().split(';').shift() : null;\r\n}\r\n\r\n// Get token from cookie or localStorage\r\nconst token = getCookie(\"token\") || localStorage.getItem(\"token\");\r\n\r\nif (!token) {\r\n  console.warn(\"No token found for Socket.IO authentication\");\r\n}\r\n\r\nexport const socket = io(\"http://localhost:5000\", {\r\n  auth: {\r\n    token, // ← This matches socket.handshake.auth.token\r\n  },\r\n  // Remove `withCredentials` when using `auth`\r\n  autoConnect: true,\r\n});\r\n\r\n//  Catch connection errors\r\nsocket.on(\"connect_error\", (err) => {\r\n  console.error(\"Socket connection failed:\", err.message);\r\n  if (err.message.includes(\"No token\")) {\r\n    console.log(\" Fix: Ensure JWT token is available in cookies or localStorage\");\r\n  }\r\n});"],"mappings":"AAAA;AACA,SAASA,EAAE,QAAQ,kBAAkB;AAErC,SAASC,SAASA,CAACC,IAAI,EAAE;EACvB,MAAMC,KAAK,GAAG,KAAKC,QAAQ,CAACC,MAAM,EAAE;EACpC,MAAMC,KAAK,GAAGH,KAAK,CAACI,KAAK,CAAC,KAAKL,IAAI,GAAG,CAAC;EACvC,OAAOI,KAAK,CAACE,MAAM,KAAK,CAAC,GAAGF,KAAK,CAACG,GAAG,CAAC,CAAC,CAACF,KAAK,CAAC,GAAG,CAAC,CAACG,KAAK,CAAC,CAAC,GAAG,IAAI;AACnE;;AAEA;AACA,MAAMC,KAAK,GAAGV,SAAS,CAAC,OAAO,CAAC,IAAIW,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAEjE,IAAI,CAACF,KAAK,EAAE;EACVG,OAAO,CAACC,IAAI,CAAC,6CAA6C,CAAC;AAC7D;AAEA,OAAO,MAAMC,MAAM,GAAGhB,EAAE,CAAC,uBAAuB,EAAE;EAChDiB,IAAI,EAAE;IACJN,KAAK,CAAE;EACT,CAAC;EACD;EACAO,WAAW,EAAE;AACf,CAAC,CAAC;;AAEF;AACAF,MAAM,CAACG,EAAE,CAAC,eAAe,EAAGC,GAAG,IAAK;EAClCN,OAAO,CAACO,KAAK,CAAC,2BAA2B,EAAED,GAAG,CAACE,OAAO,CAAC;EACvD,IAAIF,GAAG,CAACE,OAAO,CAACC,QAAQ,CAAC,UAAU,CAAC,EAAE;IACpCT,OAAO,CAACU,GAAG,CAAC,gEAAgE,CAAC;EAC/E;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}